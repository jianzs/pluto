export interface FnResource extends IResource {}

export interface ResourceInfra extends IResource {
  get name(): string;
  // eslint-disable-next-line
  getPermission(op: string, resource?: ResourceInfra): any;
  postProcess(): void;
}

/**
 * The class implementing this interface represents the type of cloud resource.
 * It's also the type that Pluto needs to detect and process.
 */
export interface IResource {}

/**
 * The methods encapsulated within the interface that extends this interface are
 * accessible during runtime. These methods typically reflect the capabilities of
 * resources. For instance, the `get` and `set` methods of the KVStore type.
 * The interface that extends this interface needs to be implemented within the Client SDK.
 */
export interface IResourceClientApi {}

/**
 * The methods encapsulated within the interface that extends this interface are
 * available during compile time. These methods are generally employed to establish
 * connections between various resources, or to set up these resources.
 * The interface that extends this interface needs to be implemented within the Infra SDK.
 */
export interface IResourceInfraApi {}

/**
 * The methods encapsulated within the interface that extends this interface always
 * are getter methods. These methods are used to fetch values that generated by
 * infrastructure code at compile time.
 * The interface that extends this interface needs to be implemented within
 * both the Client SDK and the Infra SDK.
 */
export interface IResourceCapturedProps {}
