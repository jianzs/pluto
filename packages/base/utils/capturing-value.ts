/**
 * Generate a string represents the environment variable name for the property of given resource object.
 * The result remains consistent between compile time and runtime.
 */
export function createEnvNameForProperty(resourceId: string, propertyName: string) {
  const envName = `${resourceId}_${propertyName}`.toUpperCase().replace(/[^a-zA-Z0-9_]/g, "_");
  return envName;
}

/**
 * Fetch the value that generated by infrastructure codes at compile time  of an environment variable.
 */
export function getEnvValForProperty(resourceId: string, propertyName: string): string {
  const envName = createEnvNameForProperty(resourceId, propertyName);
  const value = process.env[envName];
  if (!value) {
    throw new Error(
      `The environment variable '${envName}', representing the value for '${propertyName}' associated with the '${resourceId}', cannot be located within the environment variables.`
    );
  }
  return value;
}
